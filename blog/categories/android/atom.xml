<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: android | LESSCO.ME]]></title>
  <link href="http://lesscome.github.com/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://lesscome.github.com/"/>
  <updated>2012-03-20T21:03:36+08:00</updated>
  <id>http://lesscome.github.com/</id>
  <author>
    <name><![CDATA[lesscome]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[how to make a clock of path2.0 style on android]]></title>
    <link href="http://lesscome.github.com/blog/2012/03/18/how-to-make-a-clock-of-path2-dot-0-style-on-android/"/>
    <updated>2012-03-18T21:49:00+08:00</updated>
    <id>http://lesscome.github.com/blog/2012/03/18/how-to-make-a-clock-of-path2-dot-0-style-on-android</id>
    <content type="html"><![CDATA[<p>If you have been using path 2.0, you must be impressed by it's UI design. It's so great that I installed the app both of iOS and android, and by comparing them, I discovered a little difference between them that a clock shows feed time on iOS but not exists on android. I don't know why they did not develope the clock on android, and no metter what reason is, I'd like to make one.</p>

<p>I don't familiar with animation on android, so it takes some times to look up documentation, finally I did it after about 3 hours.</p>

<p><img src="http://ww3.sinaimg.cn/mw600/65c8e1c4jw1dr6kbmg3mwj.jpg" alt="image" /></p>

<p>Now source code can be downloaded at google code.
<a href="http://code.google.com/p/path-like-clock/">link</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips to avoid bitmap OOM]]></title>
    <link href="http://lesscome.github.com/blog/2012/01/17/tips-to-avoid-bitmap-oom/"/>
    <updated>2012-01-17T21:53:00+08:00</updated>
    <id>http://lesscome.github.com/blog/2012/01/17/tips-to-avoid-bitmap-oom</id>
    <content type="html"><![CDATA[<ul>
<li>using BitmapFactory.Options.inSampleSize</li>
<li>provide buffer to decode bitmap and less memory allocated from native heap</li>
</ul>


<p><em>code snippets :</em></p>

<pre><code>    Options options = new Options();
    options.inJustDecodeBounds = true;
    BitmapFactory.decodeFile(fileName, options);
    options.inJustDecodeBounds = false;
    options.inSampleSize = calculateSampleSize(options.outWidth, options.outHeight, dstWidth,
            dstHeight, scalingLogic);    
    Bitmap retBitmap = null;
    options.inTempStorage = new byte[64*1024];
    options.inPurgeable = true;
    retBitmap = BitmapFactory.decodeStream(new FileInputStream(f), null, options);
</code></pre>
]]></content>
  </entry>
  
</feed>
